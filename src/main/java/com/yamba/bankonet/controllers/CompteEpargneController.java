package com.yamba.bankonet.controllers;

import com.yamba.bankonet.entities.Client;
import com.yamba.bankonet.entities.CompteEpargne;
import com.yamba.bankonet.exceptions.ResourceNotFoundException;
import com.yamba.bankonet.repo.IClientRepo;
import com.yamba.bankonet.repo.ICompteEpargneRepo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
@RequestMapping(path="/compte_epargne")
public class CompteEpargneController {
    @Autowired // This means to get the bean called CompteEpargneRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private ICompteEpargneRepo repo;

    @GetMapping(path="/{numero}")
    public CompteEpargne getCompteEpargneById(@PathVariable String numero){
        return repo.findById(numero)
                .orElseThrow(() -> new ResourceNotFoundException("compte_epargne " + numero + " not found"));
    }

    @GetMapping(path="/all")
    public Iterable<CompteEpargne> getComptesEpargnes() {
        return repo.findAll();
    }

    @PostMapping(path="/new")
    public CompteEpargne addCompteEpargne(@RequestBody CompteEpargne compteEpargne) {
        return repo.save(compteEpargne);
    }

    @DeleteMapping(path="/{numero}")
    public void deleteClient(@PathVariable String numero) {
        repo.deleteById(numero);
    }


    @PutMapping(path="/{numero}")
    public CompteEpargne updateClient(@PathVariable String numero,@RequestBody CompteEpargne updatedCompteEpargne){
        CompteEpargne actualCompteEpargne = repo.findById(numero)
                .orElseThrow(() -> new ResourceNotFoundException("compte_epargne " + numero + " not found"));
        actualCompteEpargne.setIntitule(updatedCompteEpargne.getIntitule());
        actualCompteEpargne.setSolde(updatedCompteEpargne.getSolde());
        actualCompteEpargne.setTauxInteret(updatedCompteEpargne.getTauxInteret());
        actualCompteEpargne.setClient(updatedCompteEpargne.getClient());
        return repo.save(actualCompteEpargne);
    }

}
